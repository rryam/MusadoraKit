# Getting Started with MusadoraKit

@Tutorial(time: 15) {
    @Intro(title: "Build Your First Music App") {
        Learn how to integrate MusadoraKit into your app and start building amazing music experiences in just 15 minutes.
    }

    @Section(title: "Prerequisites") {
        Before you begin, make sure you have:

        - Xcode 15.0 or later
        - iOS 15.0+ / macOS 12.0+ / watchOS 8.0+ / tvOS 15.0+ / visionOS 1.0+
        - An Apple Developer account
        - Basic familiarity with Swift and SwiftUI

        Create a new SwiftUI project in Xcode and ensure your development environment meets all the requirements listed above.
    }

    @Section(title: "Step 1: Set Up Your Project") {
        Create a new SwiftUI project in Xcode and add MusadoraKit as a dependency.

        1. In Xcode, go to **File > Add Package Dependencies**
        2. Enter the URL: `https://github.com/rryam/MusadoraKit`
        3. Select the latest version and add to your target

        Your Package.swift should look like this:

        ```swift
        // swift-tools-version:5.10
        import PackageDescription

        let package = Package(
            name: "MyMusicApp",
            dependencies: [
                .package(url: "https://github.com/rryam/MusadoraKit", from: "7.5.1")
            ],
            targets: [
                .target(name: "MyMusicApp", dependencies: ["MusadoraKit"])
            ]
        )
        ```
    }

    @Section(title: "Step 2: Configure MusicKit") {
        Enable MusicKit capabilities in your app.

        1. Go to [Apple Developer Portal](https://developer.apple.com/account)
        2. Navigate to **Certificates, Identifiers & Profiles**
        3. Select your app identifier and enable **MusicKit**

        Add privacy permissions to your `Info.plist`:

        ```xml
        <key>NSAppleMusicUsageDescription</key>
        <string>Access your music library to provide personalized recommendations</string>
        ```
    }

    @Section(title: "Step 3: Request Authorization") {
        Request user permission to access Apple Music.

        Create a MusicAuthorizationManager to handle permissions:

        ```swift
        import MusicKit
        import MusadoraKit
        import Observation

        @MainActor
        @Observable
        class MusicAuthorizationManager {
            var authorizationStatus: MusicAuthorization.Status = .notDetermined

            func requestAuthorization() async {
                let status = await MusicAuthorization.request()
                authorizationStatus = status

                switch status {
                case .authorized:
                    print("Apple Music access granted!")
                case .denied:
                    print("Apple Music access denied")
                case .restricted:
                    print("Apple Music access restricted")
                case .notDetermined:
                    print("Authorization not determined")
                @unknown default:
                    break
                }
            }
        }
        ```

        Test your setup with MusadoraKit's built-in connectivity test:

        ```swift
        Task {
            do {
                try await MusadoraKit.test()
                print("Connected to Apple Music API!")
            } catch {
                print("Connection failed: \(error.localizedDescription)")
            }
        }
        ```
    }

    @Section(title: "Step 4: Fetch Your First Data") {
        Let's fetch some music data!

        Now let's build a simple SwiftUI view that fetches and displays music data:

        ```swift
        import SwiftUI
        import MusadoraKit

        struct ContentView: View {
            @State private var songs: Songs = []

            var body: some View {
                NavigationView {
                    List(songs) { song in
                        VStack(alignment: .leading) {
                            Text(song.title)
                                .font(.body)
                            Text(song.artistName)
                                .font(.caption)
                                .foregroundColor(.secondary)
                        }
                        .padding(.vertical, 2)
                    }
                    .task {
                        await loadSongs()
                    }
                    .navigationTitle("My Music")
                }
            }

            private func loadSongs() async {
                do {
                    // Get user's library songs
                    songs = try await MLibrary.songs(limit: 20)

                    // Or search the catalog
                    // let results = try await MCatalog.search(for: "pop", types: [.songs])
                    // songs = results.songs
                } catch {
                    print("Error loading songs: \(error)")
                }
            }
        }
        ```
    }

    @Section(title: "Step 5: Explore More Features") {
        Now that you have the basics working, explore these powerful features:

        Explore these powerful MusadoraKit features:

        **Personal Recommendations:**
        ```swift
        let recommendations = try await MRecommendation.default()
        ```

        **Music Summaries (Replay):**
        ```swift
        let summary = try await MSummary.latest()
        print("Your top artist: \(summary.topArtists.first?.name ?? "None")")
        ```

        **Search & Discovery:**
        ```swift
        let results = try await MCatalog.search(for: "indie rock", types: [.songs, .albums])
        ```

        **Favorites Management:**
        ```swift
        try await MCatalog.favorite(song: myFavoriteSong)
        ```
    }

    @Section(title: "Next Steps") {
        Great! You've built your first MusadoraKit app.

        Continue your MusadoraKit journey:

        - Check out the API Reference for complete documentation
        - Explore [Sample Apps](https://github.com/rryam/Musadora) for real-world examples  
        - Join the [Discord Community](https://discord.gg/6KaKCKds) for help and ideas
        - Read the [Book: Exploring MusicKit](https://academy.rudrank.com/product/musickit) for deep dives
    }

    @Assessments {
        @MultipleChoice {
            What is the first step to use MusadoraKit?

            What is the first step to use MusadoraKit?

            1. Add the package dependency
            2. Enable MusicKit in Apple Developer Portal **(Correct)**
            3. Write Swift code
            4. Test on device

            Enable MusicKit capabilities in your Apple Developer account before adding the package.
        }

        @MultipleChoice {
            Which method tests your Apple Music API setup?

            Which method tests your Apple Music API setup?

            1. `MusicAuthorization.request()`
            2. `MusadoraKit.test()` **(Correct)**
            3. `MCatalog.search()`
            4. `MLibrary.songs()`

            Use `MusadoraKit.test()` to verify your developer token and API setup.
        }
    }
}
